{"ast":null,"code":"import _objectSpread from\"D:/Projects/TextSummarizer/text-summarizer_v2/ttvb-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;// const API_BASE_URL = 'http://localhost:5000';\nconsole.log(\"API base URL:\",API_BASE_URL);class ApiService{async makeRequest(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=localStorage.getItem(\"token\");const config=_objectSpread({headers:_objectSpread(_objectSpread({\"Content-Type\":\"application/json\"},token&&{Authorization:\"Bearer \".concat(token)}),options.headers)},options);try{const response=await fetch(\"\".concat(API_BASE_URL).concat(url),config);const data=await response.json();if(!response.ok){throw new Error(data.message||\"Có lỗi xảy ra\");}return data;}catch(error){console.error(\"Lỗi API:\",error);throw error;}}// Authentication APIs\nasync register(email,password){return this.makeRequest(\"/auth/register\",{method:\"POST\",body:JSON.stringify({email,password})});}async login(email,password){const data=await this.makeRequest(\"/auth/login\",{method:\"POST\",body:JSON.stringify({email,password})});if(data.token){localStorage.setItem(\"token\",data.token);localStorage.setItem(\"user\",JSON.stringify(data.user));}return data;}// Summarization API các loại tóm tắt api: http://localhost:5000/api/summarize\nasync summarizeText(originalText){let summaryType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"medium\";return this.makeRequest(\"/summarize\",{method:\"POST\",body:JSON.stringify({original_text:originalText// summary_type: summaryType,\n})});}// Get trạng thái user\nasync getUserStats(){return this.makeRequest(\"/stats\");}// API lịch sử\nasync getHistory(){return this.makeRequest(\"/history\");}async saveHistory(originalText,summaryText){return this.makeRequest(\"/history\",{method:\"POST\",body:JSON.stringify({original_text:originalText,summary_text:summaryText})});}async deleteHistory(id){return this.makeRequest(\"/history/\".concat(id),{method:\"DELETE\"});}// Kiểm tra AI Service health check\nasync checkBackendHealth(){// return this.makeRequest(\"/api/health\")\nreturn fetch(\"http://localhost:5000/health\").then(res=>res.json());}async checkAIServer(){return fetch(\"http://localhost:6000/health\").then(res=>res.json());}// Utility methods\nlogout(){localStorage.removeItem(\"token\");localStorage.removeItem(\"user\");}getCurrentUser(){const user=localStorage.getItem(\"user\");return user?JSON.parse(user):null;}isAuthenticated(){return!!localStorage.getItem(\"token\");}}const apiService=new ApiService();export default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","console","log","ApiService","makeRequest","url","options","arguments","length","undefined","token","localStorage","getItem","config","_objectSpread","headers","Authorization","concat","response","fetch","data","json","ok","Error","message","error","register","email","password","method","body","JSON","stringify","login","setItem","user","summarizeText","originalText","summaryType","original_text","getUserStats","getHistory","saveHistory","summaryText","summary_text","deleteHistory","id","checkBackendHealth","then","res","checkAIServer","logout","removeItem","getCurrentUser","parse","isAuthenticated","apiService"],"sources":["D:/Projects/TextSummarizer/text-summarizer_v2/ttvb-frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n// const API_BASE_URL = 'http://localhost:5000';\nconsole.log(\"API base URL:\", API_BASE_URL);\n\nclass ApiService {\n  async makeRequest(url, options = {}) {\n    const token = localStorage.getItem(\"token\")\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(token && { Authorization: `Bearer ${token}` }),\n        ...options.headers,\n      },\n      ...options,\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}${url}`, config)\n      const data = await response.json()\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Có lỗi xảy ra\")\n      }\n\n      return data\n    } catch (error) {\n      console.error(\"Lỗi API:\", error)\n      throw error\n    }\n  }\n\n  // Authentication APIs\n  async register(email, password) {\n    return this.makeRequest(\"/auth/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password }),\n    })\n  }\n\n  async login(email, password) {\n    const data = await this.makeRequest(\"/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password }),\n    })\n\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token)\n      localStorage.setItem(\"user\", JSON.stringify(data.user))\n    }\n\n    return data\n  }\n\n  // Summarization API các loại tóm tắt api: http://localhost:5000/api/summarize\n  async summarizeText(originalText, summaryType = \"medium\") {\n    return this.makeRequest(\"/summarize\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        original_text: originalText,\n        // summary_type: summaryType,\n      }),\n    })\n  }\n\n  // Get trạng thái user\n  async getUserStats() {\n    return this.makeRequest(\"/stats\")\n  }\n\n  // API lịch sử\n  async getHistory() {\n    return this.makeRequest(\"/history\")\n  }\n\n  async saveHistory(originalText, summaryText) {\n    return this.makeRequest(\"/history\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        original_text: originalText,\n        summary_text: summaryText,\n      }),\n    })\n  }\n\n  async deleteHistory(id) {\n    return this.makeRequest(`/history/${id}`, {\n      method: \"DELETE\",\n    })\n  }\n\n  // Kiểm tra AI Service health check\n  async checkBackendHealth() {\n    // return this.makeRequest(\"/api/health\")\n    return fetch(\"http://localhost:5000/health\").then((res) => res.json())\n  }\n\n  async checkAIServer() {\n    return fetch(\"http://localhost:6000/health\").then(res => res.json());\n  }\n\n  // Utility methods\n  logout() {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n  }\n\n  getCurrentUser() {\n    const user = localStorage.getItem(\"user\")\n    return user ? JSON.parse(user) : null\n  }\n\n  isAuthenticated() {\n    return !!localStorage.getItem(\"token\")\n  }\n}\n\nconst apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}